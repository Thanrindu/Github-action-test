name: UAT CI/CD with Version Validation

on:
  pull_request:
    branches:
      - 'release/**'  # Match dynamic semantic versioning release branches like 'release/v1.0.0'

jobs:
  validate_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate branch name format
        id: validate_branch
        run: |
          BRANCH_NAME="${{ github.base_ref }}"
          echo "${{ github.base_ref }}"
          if [[ ! $BRANCH_NAME =~ ^release/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Branch name does not match semantic versioning pattern (release/vX.Y.Z)."
            exit 1
          fi
          VERSION=$(echo $BRANCH_NAME | sed 's/release\///')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Compare with latest tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$LATEST_TAG" ]; then
            echo "No previous tags found, proceeding with version ${{ env.VERSION }}."
          else
            echo "Latest tag found: $LATEST_TAG"
            if [[ "$(printf '%s\n' "$LATEST_TAG" "${{ env.VERSION }}" | sort -V | head -n1)" != "$LATEST_TAG" ]]; then
              echo "Error: Version ${{ env.VERSION }} is not newer than the latest tag $LATEST_TAG."
              exit 1
            fi
          fi

    # uses: ./.github/workflows/version-validation.yml  # Reuse the version validation workflow
    # with:
    #   branch_name: ${{ github.ref_name }}

  build:
    needs: validate_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

  deploy_uat:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Deploy to UAT Environment
        run: echo "Deploying to the UAT environment for branch ${{ github.ref_name }}..."